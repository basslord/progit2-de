[[_git_branching]]
== Git Branching

(((branches)))
Nahezu jedes Versionsverwaltungssystem verfügt über eine Branching-Funktionalität.
Mit Branching wird das Abzweigen von der Hauptentwicklungslinie bezeichnet, das einen in die Lage versetzt, weiterarbeiten zu können, ohne sich dabei mit der Hauptentwicklungslinie beschäftigen zu müssen.
In vielen Programmen zur Versionsverwaltung ist dies ein ziemlich aufwändiger Prozess, bei dem es häufig erforderlich ist, eine Kopie des Arbeitsverzeichnisses erstellen zu müssen, was bei größeren Projekten eine lange Zeit in Anspruch nehmen kann.

Das Branching-Modell von Git wird dagegen von manchen als ``Killer-Feature'' bezeichnet, und ganz gewiss hebt es Git von anderen Versionsverwaltungssystemen ab.
Was macht es zu etwas so Besonderem?
Branches in Git werden unglaublich leichtgewichtig realisiert, was dazu führt, dass Branching-Operationen nahezu unmittelbar ausgeführt werden, und auch das Wechseln zwischen Entwicklungszweigen weitgehend ähnlich schnell vonstatten geht.
Anders als andere Versionsverwaltungssysteme ermutigt Git zu Workflows, in denen häufig, auch mehrmals pro Tag, abgezweigt und wieder zusammengefügt wird.
Hat man diese Funktionalität erst einmal verstanden und gelernt, sie zu meistern, erhält man dadurch ein mächtiges und einzigartiges Werkzeug, das die gesamte Art und Weise verändern kann, wie man entwickelt.

include::sections/nutshell.asc[]

include::sections/basic-branching-and-merging.asc[]

include::sections/branch-management.asc[]

include::sections/workflows.asc[]

include::sections/remote-branches.asc[]

include::sections/rebasing.asc[]

=== Summary

In diesem Kapitel wurden die Grundlagen vorgestellt, wie man Branching und Merging in Git verwendet.
Man sollte nun sicher neue Branches erstellen, zu und zwischen ihnen wechseln und lokale Branches zusammenfügen können.
Man sollte außerdem wissen, wie man seine Entwicklungszweige durch Hochladen auf einen öffentlichen Server teilen, wie man zusammen mit anderen auf öffentlichen Entwicklungszweigen arbeiten, und wie man ein Rebasing eines Branches durchführen kann, bevor man sie veröffentlicht.
Als Nächstes werden wir dazu kommen, was man benötigt, um seinen eigenen Repository-Server betreiben kann.
